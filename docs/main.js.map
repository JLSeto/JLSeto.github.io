{"version":3,"sources":["./src/app/helpers/modules/material.module.ts","./src/app/helpers/services/helper.service.ts","./src/environments/environment.ts","./src/app/frogger/frogger.component.html","./src/app/frogger/frogger.component.ts","./src/app/helpers/pipes/displayDate.pipe.ts","./src/app/projects/iframe-view.ts","./src/app/projects/iframe-view.html","./src/app/helpers/services/sidenav.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/frontpage/frontpage.component.ts","./src/app/frontpage/frontpage.component.html","./src/app/app-routing.module.ts","./src/app/projects/projects.component.ts","./src/app/projects/projects.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable, NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule} from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatRippleModule, MAT_DATE_LOCALE, MAT_NATIVE_DATE_FORMATS, NativeDateAdapter, DateAdapter } from '@angular/material/core';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatPaginatorModule } from '@angular/material/paginator';\n\n@Injectable()\nexport class MyDateAdapter extends NativeDateAdapter \n{\n  getDateNames(): string[] {\n    const dateNames: string[] = [];\n    for (let i = 0; i < 31; i++) {\n      dateNames[i] = String(i + 1);\n    }\n    return dateNames;\n  }\n}\n\n@NgModule({\n  imports: [\n    MatButtonModule,\n    MatMenuModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSidenavModule,\n    MatListModule,\n    MatTabsModule,\n    MatRippleModule,\n    MatBadgeModule,\n    MatSliderModule,\n    MatCheckboxModule,\n    MatSelectModule,\n    MatGridListModule,\n    MatDialogModule,\n    MatNativeDateModule,\n    MatDatepickerModule,\n    MatExpansionModule,\n    MatStepperModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatTableModule,\n    MatRadioModule,\n    MatPaginatorModule\n  ],\n  exports: [\n    MatButtonModule,\n    MatMenuModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSidenavModule,\n    MatListModule,\n    MatTabsModule,\n    MatRippleModule,\n    MatBadgeModule,\n    MatSliderModule,\n    MatCheckboxModule,\n    MatSelectModule,\n    MatGridListModule,\n    MatDialogModule,\n    MatNativeDateModule,\n    MatDatepickerModule,\n    MatExpansionModule,\n    MatStepperModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatTableModule,\n    MatRadioModule,\n    MatPaginatorModule\n  ],\n  providers: [\n    MatDatepickerModule,\n    {provide: MAT_DATE_LOCALE, useValue: MAT_NATIVE_DATE_FORMATS},\n    {provide: DateAdapter, useClass: MyDateAdapter}\n  ]\n})\nexport class MaterialModule {}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ScreenDimensions } from '../models/models'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HelperService \n{\n  private  isMobile    : boolean = false;\n  private  innerWidth  : number = window.innerWidth;\n  private  innerHeight : number = window.innerHeight;\n\n  constructor(private router: Router)\n  {\n    this.checkifMobile();\n  }\n\n  public checkifMobile() : void\n  {\n    this.isMobile = (navigator.userAgent.match(/Android/i) \n    || navigator.userAgent.match(/webOS/i) \n    || navigator.userAgent.match(/iPhone/i)  \n    || navigator.userAgent.match(/iPad/i)  \n    || navigator.userAgent.match(/iPod/i) \n    || navigator.userAgent.match(/BlackBerry/i) \n    || navigator.userAgent.match(/Windows Phone/i)) ? true : false;\n  }\n\n  public getIsMobile() : boolean\n  {\n    return this.isMobile;\n  }\n\n  public setInnerDimensions(data : ScreenDimensions) : void\n  {\n    this.innerHeight  = data.height;\n    this.innerWidth   = data.width;\n  }\n\n  public getInnerWidth() : number\n  {\n    return this.innerWidth;\n  }\n\n  public getInnerHeight() : number\n  {\n    return this.innerHeight;\n  }\n\n  public routerNavigateProject(link: string) : void\n  {\n    this.router.navigate(['projects/' + link])\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<div style=\"width: 100%;\" fxLayout=\"column\" fxLayoutAlign=\"start center\">\n    <figure>\n        <canvas #canvas></canvas>\n        <figcaption style=\"text-align: right;\"><span class=\"frogger-caption\" (click)=\"hS.routerNavigateProject('frogger')\">Frogger</span></figcaption>\n    </figure>\n\n    <h3>{{gameMsg}}&nbsp;<span *ngIf=\"resetCounter > 0\">{{resetCounter}}</span></h3>\n</div>\n<div fxLayout=\"row wrap\" fxLayoutAlign=\"center center\" fxLayoutGap=\"16px\">\n    <div fxLayout=\"column\" fxLayoutAlign=\"start start\">\n        <div>Wins: {{winCounter}}</div>\n        <div>Losses: {{loseCounter}}</div>\n    </div>\n    <div>\n        <button mat-stroked-button style=\"color: #ff4048; border-radius: 50px;\" (click)=\"player.changeCharacter()\">Change Character</button>\n    </div>\n</div>","import { ChangeDetectorRef, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { HelperService } from '../helpers/services/helper.service';\n\n@Component({\n  selector: 'app-frogger',\n  templateUrl: './frogger.component.html',\n  styleUrls: ['./frogger.component.scss']\n})\nexport class FroggerComponent implements OnInit \n{\n    //Display Messages\n    public  gameMsg    : string = '';\n\n    //Drawings\n    @ViewChild('canvas', { static: true }) canvas!: ElementRef<HTMLCanvasElement>;\n    private ctx: CanvasRenderingContext2D | null = null as any;\n\n    //Resources\n    public Resources: Resources;\n\n    //Engine\n    public lastTime: number = Date.now();\n\n    //App\n    public allEnemies   : Enemy[] = [];\n    public player       : Player = null as any;\n    public keyItem      : KeyItem = null as any;\n    public gotKey       : boolean = false;\n    public resetCounter : number  = -1;\n    public winCounter   : number = 0;\n    public loseCounter  : number = 0;\n\n    constructor(public hS: HelperService, public cd: ChangeDetectorRef)\n    {\n        this.Resources = new Resources();\n\n        this.Resources.load([\n        './assets/frogger/char-boy.png',\n        './assets/frogger/enemy-bug.png',\n        './assets/frogger/Heart.png',\n        './assets/frogger/stone-block.png',\n        './assets/frogger/char-cat-girl.png',\n        './assets/frogger/Gem Blue.png',\n        './assets/frogger/Key.png',\n        './assets/frogger/water-block.png',\n        './assets/frogger/char-horn-girl.png',\n        './assets/frogger/Gem Green.png',\n        './assets/frogger/Rock.png',\n        './assets/frogger/char-pink-girl.png',\n        './assets/frogger/Gem Orange.png',\n        './assets/frogger/Selector.png',\n        './assets/frogger/char-princess-girl.png',\n        './assets/frogger/grass-block.png',\n        './assets/frogger/Star.png',\n        ]);\n    }\n\n    ngOnInit(): void\n    {\n        this.ctx = this.canvas.nativeElement.getContext('2d');\n        this.canvas.nativeElement.width = 505;\n        this.canvas.nativeElement.height = 606;\n        this.keyItem = new KeyItem(this.ctx, this.Resources, this.cd);\n        this.player = new Player(this.ctx, this.Resources, this.cd, this.keyItem);\n\n        for(let i = 0; i < 2; i++)\n        {\n            this.allEnemies.push(new Enemy(this.ctx, this.Resources, this.cd, this.player));\n        }\n        \n        this.Resources.onReady(this.init); //initialize\n\n        document.addEventListener('keyup', (e) => \n        {\n            this.player.handleInput(e.key);\n        });\n\n        window.addEventListener(\"keydown\", function(e) {\n            if([\"Space\",\"ArrowUp\",\"ArrowDown\",\"ArrowLeft\",\"ArrowRight\"].indexOf(e.code) > -1) {\n                e.preventDefault();\n            }\n        }, false);\n    }\n\n    //Start Engine\n    public main = () =>\n    {\n        let now = Date.now();\n        let dt = (now - this.lastTime) / 1000.0;\n        this.update(dt);\n        this.render();\n        this.lastTime = now;\n        window.requestAnimationFrame(this.main);\n    }\n\n    public update(dt : number)\n    {\n        this.checkCollisions();\n        this.updateEntities(dt);\n    }\n    \n    public checkCollisions()\n    {\n        if(this.gotKey)\n        {\n            return;\n        }\n\n        if(true)\n        {\n\n        }\n\n        if(this.player.x == this.keyItem.x && this.player.y == this.keyItem.y)\n        {\n            this.resetCounter = 3;\n            this.gotKey = true;\n            this.gameMsg = 'You Win! Resetting in ';\n            this.player.disable = true;\n            this.keyItem.disable = true;\n            this.winCounter++;\n            var refreshInteval = setInterval(() => \n            {\n                this.resetCounter--;\n                if(this.resetCounter <= 0)\n                {\n                    this.player.disable = false;\n                    this.keyItem.disable = false;\n                    this.gameMsg = '';\n                    this.player.x = 202; //0 is first column. 101 is 2nd.\n                    this.player.y = 374.5; //41.5 is middle of a row 41.5*9\n                    this.gotKey = false;\n                    for(let i = 0; i < 2; i++)\n                    {\n                        this.allEnemies.push(new Enemy(this.ctx, this.Resources, this.cd, this.player));\n                    }\n                    clearInterval(refreshInteval);\n                }\n                \n            }, 1000)\n        }\n    }\n\n    public updateEntities(dt : number)\n    {\n        this.allEnemies.forEach((enemy) => \n        {\n            let x = enemy.update(dt);\n            if(x)\n            {\n                this.loseCounter++;\n            }\n        });\n\n        this.player.update();\n    }\n\n\n    private render() : void\n    {\n        let rowImages = \n        [\n        './assets/frogger/water-block.png',   // Top row is water\n        './assets/frogger/stone-block.png',   // Row 1 of 3 of stone\n        './assets/frogger/stone-block.png',   // Row 2 of 3 of stone\n        './assets/frogger/stone-block.png',   // Row 3 of 3 of stone\n        './assets/frogger/stone-block.png',   // Row 1 of 2 of grass\n        './assets/frogger/grass-block.png'    // Row 2 of 2 of grass\n        ], numRows = 6, numCols = 5, row, col;\n\n        this.ctx?.clearRect(0, 0, this.canvas.nativeElement.width, this.canvas.nativeElement.height);\n\n        for (row = 0; row < numRows; row++) \n        {\n            for (col = 0; col < numCols; col++)\n            {\n                if(row == 0 && col == numCols - 1)\n                {\n                    this.ctx!.drawImage(this.Resources.get('./assets/frogger/stone-block.png'), col * 101, row * 83);\n                }\n                else\n                {\n                    this.ctx!.drawImage(this.Resources.get(rowImages[row]), col * 101, row * 83);\n                }\n            }\n        }\n        this.renderEntities();\n    }\n\n    renderEntities()\n    {\n        this.allEnemies.forEach(function(enemy : Enemy)\n        {\n            enemy.render();\n        });\n\n        this.player.render();\n        this.keyItem.render();\n    }\n\n    init = () =>\n    {\n        //this.reset();\n        this.lastTime = Date.now();\n        this.main();\n    }\n}\n\nclass Enemy\n{\n    private sprite  : string = './assets/frogger/enemy-bug.png';\n    public x        : number = -101;\n    public y        : number = 0;\n    private speed   : number = Math.floor(Math.random()*400);\n\n    constructor(private ctx: CanvasRenderingContext2D | null, private resources: Resources, private cd: ChangeDetectorRef, private player: Player)\n    {\n        this.y = this.randomEnemies();\n    }\n\n    public randomEnemies = function() : number\n    {\n        var set = [42.5, 125.5, 208.5, 291.5];\n        var rndm =  Math.floor(Math.random()*4);\n        return set[rndm];\n    }\n\n    public update = (dt: number) : boolean =>\n    {\n        this.x += this.speed * dt;\n        this.x = (this.x > 505) ? (-101) : (this.x + 1);\n\n        let minRange = Math.floor(this.x - 50);\n        let maxRange = Math.floor(this.x + 50);\n    \n        if(this.y == this.player.y)\n        {\n          if((this.player.x > minRange && this.player.x < this.x) || (this.player.x > this.x && this.player.x < maxRange))\n          {\n            this.player.x = 202; //0 is first column. 101 is 2nd.\n            this.player.y = 374.5; //41.5 is middle of a row 41.5*9\n            return true;\n          }\n        }\n\n        return false;\n    }\n\n    public render = () : void => \n    {\n        this.ctx?.drawImage(this.resources.get(this.sprite), this.x, this.y);\n        this.ctx?.save();\n        //this.cd.detectChanges();\n    }\n}\n\nclass Resources\n{\n    //Resources\n    public resourceCache    : any = {};\n    public loading          : any = [];\n    public readyCallbacks   : any = [];\n\n    constructor()\n    {\n\n    }\n\n    public load(urlOrArr : any) : void\n    {\n        if(urlOrArr instanceof Array)\n        {\n            urlOrArr.forEach((url) =>\n            {\n                this._load(url);\n            });\n\n            console.log(this.get('./assets/frogger/Star.png'));\n        }\n        else\n        {\n        this._load(urlOrArr);\n        }\n    }\n\n    private _load(url : any)\n    {\n        if(this.resourceCache[url])\n        {\n            return this.resourceCache[url];\n        } \n        else \n        {\n            let img = new Image();\n            \n            img.onload = () => \n            {\n                this.resourceCache[url] = img;\n                if(this.isReady())\n                {\n                    this.readyCallbacks.forEach(function(func : any) { func(); });\n                }\n            };\n            this.resourceCache[url] = false;\n            img.src = url;\n        }\n    }\n\n    public get(url: any)\n    {\n        return this.resourceCache[url];\n    }\n\n    public isReady()\n    {\n        let ready = true;\n        for(var k in this.resourceCache) \n        {\n            if(this.resourceCache.hasOwnProperty(k) &&\n            !this.resourceCache[k]) \n            {\n                ready = false;\n            }\n        }\n        return ready;\n    }\n\n    onReady(func : any)\n    {\n        this.readyCallbacks.push(func);\n    }\n}\n\nclass Player\n{\n    private sprite  : string = './assets/frogger/char-boy.png';\n    private arrChar : string[];\n    private charIdx : number = 0;\n    public x        : number = 202;\n    public y        : number = 374.5;\n    public disable  : boolean = false;\n\n    constructor(private ctx: CanvasRenderingContext2D | null, private resources: Resources, private cd: ChangeDetectorRef, private keyItem: KeyItem)\n    {\n        this.arrChar = \n        [\n            './assets/frogger/char-boy.png',\n            './assets/frogger/char-cat-girl.png',\n            './assets/frogger/char-horn-girl.png',\n            './assets/frogger/char-pink-girl.png',\n            './assets/frogger/char-princess-girl.png',\n        ];\n    }   \n    \n    public update = () : void =>\n    {\n        if(this.disable)\n        {\n            return;\n        }\n\n        if(this.x > 404 || this.x < 0 || this.y > 415 || this.y < 0)\n        {\n            this.x = 202;\n            this.y = 374.5;\n        }\n    }\n\n    public handleInput = (keys : any) : void => \n    {\n        if(this.disable)\n        {\n            return;\n        }\n\n        switch(keys)\n        {\n          case 'ArrowUp':\n            this.y -=83;\n          break;\n          \n          case 'ArrowDown':\n            this.y +=83;\n          break;\n          \n          case 'ArrowLeft':\n            this.x -=101;\n          break;\n          \n          case 'ArrowRight':\n            this.x +=101;\n          break;\n        }\n    }\n\n    public render = () : void => \n    {\n        this.ctx?.drawImage(this.resources.get(this.sprite), this.x, this.y);\n        this.ctx?.save();\n        this.cd.detectChanges();\n    }\n\n    public changeCharacter() : void\n    {\n        this.charIdx = (this.charIdx >= this.arrChar.length - 1) ? 0 : (this.charIdx + 1);\n        this.sprite = this.arrChar[this.charIdx];\n    }\n}\n\nclass KeyItem\n{\n    public disable  : boolean   = false;\n    private sprite  : string    = './assets/frogger/Key.png';\n    public x        : number    = 404;\n    public y        : number    = -40.5;\n\n    constructor(private ctx: CanvasRenderingContext2D | null, private resources: Resources, private cd: ChangeDetectorRef){}\n\n    public render = () : void => \n    {\n        if(this.disable)\n        {\n            return;\n        }\n        else\n        {\n            this.ctx?.drawImage(this.resources.get(this.sprite), this.x, this.y);\n            this.ctx?.save();\n            this.cd.detectChanges();\n        }\n    }\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n\n@Pipe({\n  name: 'displayDate'\n})\n\nexport class DisplayDatePipe implements PipeTransform \n{\n    private displayLang  = 'en-US'//'ja-JP';\n    private date_options: Intl.DateTimeFormatOptions = { year: 'numeric', month: 'long', day: 'numeric' };\n\n    constructor(){}\n\n    transform(date: any) : string\n    {\n      if(!date)\n      {\n        return '';\n      }\n      else\n      {\n        return new Date(date).toLocaleDateString(this.displayLang, this.date_options);\n      }\n    }\n}","import { Component, OnInit, ViewChild, ElementRef, ChangeDetectorRef, Inject, Input } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl } from '@angular/platform-browser';\n\n@Component({\n    selector: 'app-iframesrc',\n    templateUrl: './iframe-view.html',\n    styleUrls: ['./projects.component.scss']\n  })\nexport class iFrameView\n{\n    public x: any = (Math.random()).toString();\n    public _iframeSrc: SafeHtml = '';\n    \n    @Input() set iframeSrc( s: string)\n    {\n      this._iframeSrc = this.dom.bypassSecurityTrustResourceUrl(s);\n    }\n\n  constructor(private dom: DomSanitizer) \n  {\n\n    \n  }\n\n  ngOnInit() \n  {\n\n  }\n\n}","<div class=\"videoWrapper\">\n    <iframe id=\"iframe{{x}}\" [src]=\"_iframeSrc\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n</div>\n","import { MatSidenav } from '@angular/material/sidenav';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SidenavService \n{\n    private sidenav: MatSidenav = null as any;\n\n    public setSidenav(sidenav: MatSidenav) \n    {\n      this.sidenav = sidenav;\n    }\n\n    public open() \n    {\n      return this.sidenav.open();\n    }\n\n    public close() \n    {\n      return this.sidenav.close();\n    }\n\n    public toggle(): void \n    {\n      console.log(this.sidenav)\n      this.sidenav.toggle();\n    }\n}","import { Component, HostListener, ViewChild } from '@angular/core';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { HelperService } from './helpers/services/helper.service';\nimport { SidenavService } from './helpers/services/sidenav.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n\nexport class AppComponent \n{\n  title = 'JLSeto';\n  @ViewChild('sidenav', {static: false}) public sidenav!: MatSidenav;\n  \n  constructor(public hS: HelperService, private sN: SidenavService)\n  {\n    this.hS.checkifMobile();\n  }\n\n  ngAfterViewInit(): void \n  {\n    this.sN.setSidenav(this.sidenav); //Control the sidenav from navbar component\n    console.log(this.sidenav)\n  }\n\n  @HostListener('window:resize', ['$event']) onResize(event: any) \n  {\n    this.hS.setInnerDimensions({width: event.target.innerWidth, height: event.target.innerHeight});\n    this.hS.checkifMobile();\n  }\n\n}\n","<div class=\"app-outer\">\n  <!------------------------------------------------ Navigation Bar ----------------------------------------------->\n  <app-navbar></app-navbar>\n  <!------------------------------------------------ Navigation Bar ----------------------------------------------->\n  <mat-sidenav-container class=\"example-sidenav-container\">\n    <mat-sidenav #sidenav mode=\"over\">\n      <mat-nav-list>\n        <a routerLink=\"/\" mat-list-item><div class=\"nav-mat-list\">About</div></a>\n        <a routerLink=\"/projects\" mat-list-item><div class=\"nav-mat-list\">Projects</div></a>\n        <a routerLink=\"/blog\" mat-list-item><div class=\"nav-mat-list\">Blog</div></a>\n      </mat-nav-list>\n    </mat-sidenav>\n    <mat-sidenav-content id=\"mat-sidenav-content\" #sbtop>\n      <router-outlet></router-outlet> <!-- web content-->\n    </mat-sidenav-content>\n  </mat-sidenav-container>\n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MaterialModule } from './helpers/modules/material.module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { FrontpageComponent } from './frontpage/frontpage.component';\nimport { ProjectsComponent } from './projects/projects.component';\nimport { DisplayDatePipe } from './helpers/pipes/displayDate.pipe';\nimport { iFrameView } from './projects/iframe-view';\nimport { FroggerComponent } from './frogger/frogger.component'\n\n@NgModule({\n  declarations: \n  [\n    AppComponent,\n    NavbarComponent,\n    FrontpageComponent,\n    ProjectsComponent,\n    DisplayDatePipe,\n    iFrameView,\n    FroggerComponent\n  ],\n  imports: \n  [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    FlexLayoutModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { HelperService } from '../helpers/services/helper.service';\nimport { SidenavService } from '../helpers/services/sidenav.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit \n{\n  public title    : string      = 'J.S';\n  public navLinks : {desc: string, link: string}[];\n  public locSrc   : {desc: string, link: string}[];\n  public baseURL  : string = '';\n  private _routerSub = Subscription.EMPTY; //Check when the navigation ends, and then get profile info to prevent multiple requests\n\n  constructor(public hS: HelperService, public sidenav: SidenavService, public router: Router)\n  {\n    this.locSrc = \n    [\n      {desc: './assets/twitter.svg',      link: 'https://twitter.com/Jset0'               },  \n      {desc: './assets/github.png',       link: 'https://github.com/JLSeto'               }, \n      {desc: './assets/linkedin.png',     link: 'https://www.linkedin.com/in/jimmy-seto/' }\n    ];\n\n    this.navLinks = \n    [\n      {desc: 'About',           link: '/'             }, \n      {desc: 'Projects',        link: 'projects'      }, \n      {desc: 'Blog',            link: 'blog'          }\n    ];\n    \n    this._routerSub = router.events.subscribe((val) => \n    {\n      if(val instanceof NavigationEnd) \n      {\n          this.baseURL = val.url.split('?')[0];\n      }\n    });\n\n  }\n\n  ngOnInit(): void \n  {\n    \n  }\n\n  toggle()\n  {\n    this.sidenav.toggle();\n  }\n\n}\n","<div fxFlex>\n    <mat-toolbar color=\"primary\" mat-elevation-z8=\"true\">\n        <mat-toolbar-row fxLayout=\"row\" fxLayoutGap=\"12px\">\n            <button mat-icon-button (click)=\"sidenav.toggle()\" *ngIf=\"hS.getIsMobile()\">\n                <mat-icon class=\"material-icons-outlined\">menu</mat-icon>\n            </button>\n            <div *ngIf=\"!hS.getIsMobile()\" fxLayout=\"row\" fxLayoutGap=\"12px\">\n                <button mat-button *ngFor=\"let obj of navLinks\" routerLink=\"{{obj.link}}\">\n                    <span class=\"nav-links\" style=\"color: white;\">{{obj.desc}}</span>\n                </button>\n            </div>\n            <span fxFlex></span>\n            <div *ngIf=\"!hS.getIsMobile() && baseURL != '/'\" fxLayout=\"row\" fxLayoutGap=\"16px\">\n                <div style=\"display: block;\" *ngFor=\"let local of locSrc\">\n                    <a [href]=\"local.link\" target=\"_blank\"><img [src]=\"local.desc\" class=\"nav-circle\"></a>\n                </div>\n            </div>\n        </mat-toolbar-row>\n    </mat-toolbar>\n</div>","import { ChangeDetectorRef, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { HelperService } from '../helpers/services/helper.service';\n\n@Component({\n  selector: 'app-frontpage',\n  templateUrl: './frontpage.component.html',\n  styleUrls: ['./frontpage.component.scss']\n})\n\nexport class FrontpageComponent implements OnInit \n{\n    public  faviconImg : string = './assets/favicon.png';\n    private resume     : string = './assets/Jimmy_ResumeS.pdf';\n    public  mailTo     : string = 'mailto:jseto@jimmyseto.com';\n    \n    constructor(public hS : HelperService, public cd: ChangeDetectorRef)\n    {\n\n    }\n\n    ngOnInit(): void \n    {\n\n    }\n\n    public downloadResume() : void\n    {\n        let link = document.createElement('a');\n        link.href = this.resume;\n        link.download = \"JimmySeto_Resume.pdf\";\n        link.click();\n        link.remove();\n    }\n}","<div class=\"ftop-container\" [ngClass]=\"hS.getInnerWidth() > 959 ? 'toptop' : 'toptopPadd'\" fxLayout.gt-sm=\"row\" fxLayoutAlign.gt-sm=\"center center\" \n    fxLayout.lt-lg=\"column\" fxLayoutAlign.lt-lg=\"start start\" fxLayoutGap=\"20px\">\n        <div fxShow=\"true\" fxHide.lt-md fxFlex=\"8\"></div>\n    \n        <div fxFlex style=\"padding-left: 10px; padding-right: 10px;\" \n        fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayout.lt-md=\"column\" fxLayoutAlign.lt-md=\"center stretch\" fxLayoutGap=\"20px\">\n          <div fxFlex [ngStyle]=\"{'text-align': hS.getInnerHeight() > 959 ? 'start' : 'center'}\">\n            <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n                <img [src]=\"faviconImg\" class=\"nav-circle\">\n            </div>\n            <h2>Hi, I'm Jimmy. Welcome to my blog.</h2>\n            <h3>\n                I like programming, electronics, and learning new technologies. \n                The main purpose of this site is to keep notes on stuff I studied, personal projects, \n                and other open source tech stuff.\n            </h3>\n            <div>\n              <h3 fxLayout=\"column\" fxLayoutAlign=\"start start\" fxLayoutAlign.lt-md=\"center center\">\n                <!-- <div>Resume: <a class=\"frontpage-links\" (click)=\"downloadResume()\">View</a></div> -->\n                <div>Email: <a class=\"frontpage-links\" [href]=\"mailTo\" target=\"_blank\">jseto@jimmyseto.com</a></div>\n              </h3>\n            </div>\n            <div fxLayout=\"row wrap\" fxLayoutAlign=\"center center\" fxLayoutGap=\"18px\">\n                <div class=\"logos-signin\">\n                    <a href=\"https://twitter.com/Jset0\" target=\"_blank\"><img [src]=\"'./assets/twitter.svg'\" style=\"width: 100%; height: auto;\"></a>\n                </div>\n                <div class=\"logos-signin\">\n                    <a href=\"https://github.com/JLSeto\" target=\"_blank\"><img [src]=\"'./assets/github.png'\" style=\"width: 100%; height: auto;\"></a>\n                </div>\n                <div class=\"logos-signin\">\n                    <a href=\"https://www.linkedin.com/in/jimmy-seto/\" target=\"_blank\"><img [src]=\"'./assets/linkedin.png'\" style=\"width: 100%; height: auto;\"></a>\n                </div>\n            </div>\n          </div>\n          <div fxFlex>\n              <app-frogger></app-frogger>\n          </div>\n        </div>\n    \n        <div fxShow=\"true\" fxHide.lt-md fxFlex=\"8\"></div>\n</div>","import { NgModule }                 from '@angular/core';\nimport { RouterModule, Routes }     from '@angular/router';\nimport { FroggerComponent } from './frogger/frogger.component';\n\nimport { FrontpageComponent }       from './frontpage/frontpage.component';\nimport { ProjectsComponent }        from './projects/projects.component';\n\nconst routes: Routes = \n[\n  { path: '',                                       component: FrontpageComponent               },\n  { path: 'projects',                               component: ProjectsComponent                },\n  { path: 'projects/:title',                        component: ProjectsComponent                },\n  { path: 'test',                                   component: FroggerComponent                 }\n  //{ path: '**',                                     component: PageNotFoundComponent,           canActivate: [NeutralGuard]   }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, ComponentFactoryResolver, OnInit } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { Details, Projects } from '../helpers/models/models';\nimport { HelperService } from '../helpers/services/helper.service';\n\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html',\n  styleUrls: ['./projects.component.scss']\n})\nexport class ProjectsComponent implements OnInit \n{\n    public filterButtons: string[] = ['All', 'Hardware', 'Web Components'];\n    public selectedFB   : string   = this.filterButtons[0];\n    public currentRoute : string | null;\n    public currentURL   : string = '';\n    public iframeSrc?   : string;\n    public gitSrc?      : string;\n    public arrProjects  : Projects[];\n    private _routerSub  : Subscription = Subscription.EMPTY; //Check when the navigation ends, and then get profile info to prevent multiple requests\n\n    constructor(public hS: HelperService, public route: ActivatedRoute, private router: Router, \n        private cfr: ComponentFactoryResolver, private dom: DomSanitizer)\n    {\n        this.currentRoute = this.route.snapshot.paramMap.get('id');\n        this.arrProjects = \n        [\n            {\n                type           : [\"Web Components\"],\n                image          : \"./assets/frogger/froggerScreen.png\", \n                title          : \"Frogger\",\n                date           : new Date(\"August 08, 2021\"),\n                subtitle       : \"TypeScript, JavaScript, HTML, CSS\", \n                description    : \"A Frogger game from Udacity's Nanodegree Web Development. The project was initially in JavaScript but ported over to TypeScript!\",\n                link           : \"frogger\",\n                details        :    [\n                                        { \n                                            heading   : 'Overview', \n                                            notes     : `This frogger game is based off of Udacity's frontend nanodegree arcade game.\n                                                        The project was initially completed in JavaScript but was ported over to \n                                                        TypeScript and integrated with this website in Angular. The objective of the game is to \n                                                        reach the key without getting hit by\n                                                        the moving bugs.  If you get hit by a bug, you will start back in your initial position.  If you\n                                                        reach the key, the level will be regenerated but now with more bugs!`,\n                                        },\n                                        {\n                                            heading   : 'How it Works', \n                                            notes     : `The game consists of three layers: the engine, the resources, and the application.\n                                                        The engine works by drawing the entire game screen over and over again.  \n                                                        The resources is an image loading utility which eases the process of loading images\n                                                        to be used within the game.  The app layer consists of the player, the enemies, and the key. \n                                                        It initializes the location of our objects on the game field and handles the event listeners\n                                                        like when we press a key.`\n                                        }\n                                    ],\n                demo           :    \n                                    {\n                                        heading   : 'Demo', \n                                        video     : '',\n                                        git       : ''\n                                    },\n                hardware       :    [],\n                software       :    [\n                                        'TypeScript',\n                                        'JavaScript',\n                                        'Html',\n                                        'CSS'\n                                    ],\n                references     :    [\n                                        {link: 'https://docs.google.com/document/d/1v01aScPjSWCCWQLIpFqvg3-vXLH2e8_SZQKC8jNO0Dc/pub?embedded=true', title: 'Project Guide'},\n                                        {link: 'https://review.udacity.com/#!/projects/2696458597/rubric'     , title: 'Rubric'}\n                                    ],\n            },\n            {\n                type           : [\"Hardware\"],\n                image          : \"./assets/microController/arduino101/arduino101.jpg\", \n                title          : \"IoT MEAN App (RESTful API server and Arduino101)\",\n                date           : new Date(\"December 12, 2017\"),\n                subtitle       : \"Bluetooth Low Energy, Arduino, Sensor Collection\", \n                description    : \"An IoT web application built using restful API that displays data collected from Arduino 101\",\n                link           : \"IoT-Arduino101\",\n                details        :    [\n                                        { \n                                            heading   : 'Overview', \n                                            notes     : `The Arduino101 is a microcontroller board that is based off of the Intel Curie Module which includes \n                                            the Intel Quark Microcontroller C1000. This board comes with a 6-axis accelerometer/gyrometer and also \n                                            has built in Bluetooth low Energy (BLE). For this project, the Arduino101 is set up to collect acceleration \n                                            and gyrometer data, and then advertise the data over BLE. A client device is setup to connect to the Arduino101 \n                                            via bluetooth, read the advertised data, and then send that data over wifi to a server. \n                                            The server stores the received data in a database and also forwards it to a webpage where \n                                            the data is graphed and displayed for the user. From the webpage, a user can also control \n                                            the Arduino101’s sampling frequency. With a click of a button, the user can send a new sampling time all \n                                            the way back to the Arduino101. The change is instantaneous and can be visually seen on the webpage. \n                                            The below diagram illustrates a general overview of this project.`,\n                                            img       : './assets/microController/arduino101/arduino101_diagram_db.png'\n                                        },\n                                        {\n                                            heading   : 'How it Works', \n                                            notes     : `<div class=\"h3-deep\">Arduino101</div>\n                                            Standard Arduino code along with the “CurieBLE” and “CurieIMU” libraries were used to write the code for \n                                            the Arduino101 board. The board is set up as a peripheral with one service that contains seven characteristics. \n                                            One characteristic is the sampling frequency (ts) which the user can write values to, and the other six are the \n                                            acceleration/gyrometer values (ax, ay, az, gx, gy, gz). These service and characteristics are each assigned a UUID \n                                            which is used by the client device to connect, subscribe, read, write, or receive notifications for a particular characteristic.\n                                            <div class=\"h3-deep\">Client Device</div>\n                                            On my client device, Node.js along with Noble is used to search and connect to the Arduino101 over BLE. \n                                            Once the client device finds the Arduino101, it looks under the assigned Service UUID for each Characteristic UUID. \n                                            Notifications are then turned on for each characteristic, and Socket.io is used to forward the sampling frequency and \n                                            accelerometer/gyrometer data to my server. One interesting point to note here is the use of Socket.io over WebSockets. \n                                            The main reason why Socket.io is used over Websockets in this project is because of multiplexing. Socket.io’s API makes \n                                            it quite easy to send multiple signals over one channel while doing this with Websockets is a little more complex.\n                                            <div class=\"h3-deep\">Server / Webpage</div>\n                                            Node.js along with Express is used to set up my server and MongoDB is used as my database. Socket.io once again forwards \n                                            the data from my server to my webpage, where the raw data values are displayed and graphed for the user. From the webpage, \n                                            the user can also choose to change the sampling frequency of the Arduino101. These effects take place nearly instantaneously \n                                            thanks to Socket.io and Noble. The user can also see this change visually on the webpage where the rate of the incoming data \n                                            will either speed up or slow down based on the new sampling time chosen. The webpage was created using frameworks such as Bootstrap \n                                            and Angularjs. Google Charts is used to graph the acceleration values in real time. The project is available on github and a demo \n                                            is available on youtube.`\n                                        }\n                                    ],\n                demo           :    \n                                    {\n                                        heading   : 'Demo', \n                                        video     : 'https://www.youtube.com/embed/x961tXPIoRY',\n                                        git       : 'https://github.com/JLSeto/Arduino101'\n                                    },\n                hardware       :    ['Arduino101', 'Laptop (Ubuntu OS)', 'Intel Edison or Raspberry Pie'],\n                software       :    [\n                                        'Node.js',\n                                        'Socket.io',\n                                        'Noble',\n                                        'Express',\n                                        'Angularjs',\n                                        'BootStrap',\n                                        'Google Charts',\n                                        'HTML', \n                                        'CSS', \n                                        'JavaScript'\n                                    ],\n                references     :    [\n                                        {link: 'https://www.arduino.cc/en/Reference/CurieBLE'                                       , title: 'CurieBLE'},\n                                        {link: 'https://www.rabbitmq.com/blog/2012/02/23/how-to-compose-apps-using-websockets/'     , title: 'Multiplexing using Websockets'},\n                                        {link: 'https://www.npmjs.com/package/node-red-contrib-scx-ibmiotapp'   , title: 'Google Charts'},\n                                    ],\n            },\n            {\n                type           : [\"Hardware\"],\n                image          : \"./assets/microController/cc2650/cc2650.jpg\", \n                title          : \"IoT-CC2650\",\n                date           : new Date(\"December 5, 2017\"),\n                subtitle       : \"IoT with Texas Instrument CC2650 SensorTag\", \n                description    : \"An IoT web application built using restful API that displays data collected from Texas Instrument CC2650 SensorTag\",\n                link           : \"IoT-CC2650\",\n                details        :    [\n                                        { \n                                            heading   : 'Overview', \n                                            notes     : `Texas Instrument’s CC2650 SensorTag is a sensor that captures real world data such as acceleration and \n                                                        temperature and allows for quick IoT programming. The SensorTag is easily configured to connect over bluetooth \n                                                        to your phone via a downloadable TI SensorTag App. The app displays the captured data freely to the user, and also \n                                                        allows you to forward that data to IBM’s Quick start server via wifi with a switch of a button. IBM’s platform can \n                                                        then be used to analyze the data as well as write and host our IoT application. However, in this project, Node-Red and \n                                                        Websockets are used to pull the data from IBM’s website and display it in our own website. \n                                                        The below digram shows and an overall view of this demo and the part this project is focused on.`,\n                                            img       : \"./assets/microController/cc2650/cc2650_diagram.png\"\n                                        },\n                                        {\n                                            heading   : 'How it Works', \n                                            notes     : `Node.js is used as my server and integrates Node-Red - a programming tool \n                                                        with a graphical interface that allows you to just connect programming objects like a \n                                                        flow diagram. To retrieve data from IBM’s platform in Node-red, I mainly use then ibmiotapp module, \n                                                        and then connect that to my websocket module which sends the data to my server. The server \n                                                        then forwards that data via websockets to my website where the raw values are displayed using some simple \n                                                        javascript, css, and html. Google Charts is also used in my website to graph the x, y, and z acceleration data \n                                                        in real time. This project is available on github and a demo is available on youtube.`,\n                                            img       : \"./assets/microController/cc2650/middleware.png\"\n                                        },\n\n                                    ],\n                demo           :    \n                                    {\n                                        heading   : 'Demo', \n                                        video     : 'https://www.youtube.com/embed/2XyzMGU4GSo',\n                                        git       : 'https://github.com/JLSeto/CC2650'\n                                    },\n                hardware       :    ['Texas Instruments CC2650 SensorTag', 'SmartPhone with “TI SensorTag” Application', 'Laptop running Linux (Ubuntu OS)'],\n                software       :    ['Node.js', 'Node-Red', 'BootStrap', 'HTML', 'CSS', 'JavaScript'],\n                references     :    [\n                                        {link: 'http://www.ti.com/tool/CC2650STK'                               , title: 'Texas Instrument’s CC2650 SensorTag'},\n                                        {link: 'https://nodered.org/'                                           , title: 'Node-Red'},\n                                        {link: 'https://github.com/websockets/ws'                               , title: 'WebSockets'},\n                                        {link: 'https://www.npmjs.com/package/node-red-contrib-scx-ibmiotapp'   , title: 'ibmiotapp'},\n                                        {link: 'https://www.npmjs.com/package/node-red-contrib-scx-ibmiotapp'   , title: 'Google Charts'},\n                                    ],\n            }\n        ];\n\n        this._routerSub = router.events.subscribe((val) => \n        {\n          if(val instanceof NavigationEnd) \n          {\n                this.setiFrame(val.url);\n              this.reInitialize(val.url);\n          }\n        });\n    }\n\n    ngOnInit(): void \n    {\n\n    }\n\n    public reInitialize(url: string) : void\n    {\n        url = url.split(\"/\")[2];\n        this.currentURL = url;\n    }\n\n    public checkCurrentURL(obj : Projects) : boolean\n    {\n        return (obj.link == this.currentURL) ? true : false;\n    }\n\n    setiFrame(url : string) : void\n    {\n        url = url.split(\"/\")[2];\n        for(let obj of this.arrProjects)\n        {\n            if(obj.link == url)\n            {\n                let isValid = (obj.link == url) ? true : false;\n\n                if(isValid)\n                {\n                    this.gitSrc = obj.demo?.git;\n                    this.iframeSrc = obj.demo?.video;\n                }\n            }\n        }\n        \n    }\n\n    checkFilter(obj : Projects) : boolean\n    {\n\n        return ((this.selectedFB == 'All') || (obj.type.includes(this.selectedFB))) ? true : false;\n    }\n\n    setFilter(str : string) : void\n    {\n        this.selectedFB = str;\n    }\n\n    ngOnDestroy()\n    {\n      if(!!this._routerSub)\n      {\n        this._routerSub.unsubscribe();\n      }\n    }\n\n}\n","<div class=\"ftop-container\" [ngClass]=\"hS.getInnerWidth() > 959 ? 'toptop' : 'toptopPadd'\" fxLayout.gt-sm=\"row\" fxLayoutAlign.gt-sm=\"start start\" \n    fxLayout.lt-md=\"column\" fxLayoutAlign.lt-md=\"start start\">\n        <div fxShow=\"true\" fxHide.lt-lg fxFlex=\"4\"></div>\n    \n        <div fxFlex style=\"padding-left: 10px; padding-right: 10px;\" \n        fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayout.lt-md=\"column\" fxLayoutAlign.lt-md=\"start stretch\" fxLayoutGap=\"30px\">\n          <div fxFlex *ngIf=\"!hS.getIsMobile() || (hS.getIsMobile() && !currentURL)\">\n              <div fxLayout=\"row wrap\" fxLayoutAlign=\"start stretch\" fxLayoutGap=\"4px\">\n                  <div *ngFor=\"let fb of filterButtons\">\n                    <button mat-stroked-button class=\"projects-button-pink\" (click)=\"setFilter(fb)\"\n                        [style.color]=\"(selectedFB == fb )? '#ffffff' : '#ff4081'\" [style.background-color]=\"(selectedFB == fb) ? '#ff4081' : '#ffffff'\">\n                        {{fb}}\n                    </button>\n                  </div>\n              </div>\n              <div *ngFor=\"let obj of arrProjects\" style=\"margin-bottom: 8px;\">\n                <mat-card class=\"mat-elevation-z0 projects-card\" style=\"border: 0.5px solid #d5d5d5;\" (click)=\"hS.routerNavigateProject(obj.link)\" *ngIf=\"checkFilter(obj)\">\n                    <div fxLayout=\"row\" fxLayoutAlign=\"start stretch\" fxLayoutGap=\"5px\" fxLayout.lt-sm=\"column\" fxLayoutAlign.lt-sm=\"stretch center\">\n                        <div style=\"display: block; max-width: 250px; min-width: 50px;\">\n                            <img class=\"projects-img\" [src]=\"obj.image\">\n                        </div>\n                        <div fxFlex fxLayout=\"column\" fxLayoutAlign=\"start start\" style=\"padding-left: 4px\">\n                            <div class=\"projects-title\">{{obj.title}}</div>\n                            <div class=\"projects-subtitle\">{{obj.date | displayDate}}</div>\n                            <div class=\"projects-subtitle\">({{obj.subtitle}})</div>\n                            <div class=\"projects-description\">{{obj.description}}</div>\n                        </div>\n                    </div>\n                </mat-card>\n              </div>\n          </div>\n          <div fxFlex> \n            <div *ngFor=\"let obj of arrProjects\">\n                <div *ngIf=\"checkCurrentURL(obj)\">\n                    <h1 style=\"text-align: center;\">{{obj.title}}</h1>\n                    <div *ngFor=\"let detail of obj.details; let i = index\">\n                        <h2>{{detail.heading}}</h2>\n                        <div style=\"margin-bottom: 12px; line-height: 1.6;\" [innerHTML]=\"detail.notes\"></div>\n                        <div fxLayout=\"row\" style=\"margin-bottom: 12px\">\n                            <span fxFlex></span>\n                            <div *ngIf=\"detail.img\" style=\"display: block; max-width: 800px; min-width: 50px;\">\n                                <img [src]=\"detail.img\" class=\"projects-img\">\n                            </div>\n                            <span fxFlex></span>\n                        </div>\n                    </div>\n                    <div>\n                        <h2>{{obj?.demo?.heading}}</h2>\n                        <div style=\"margin-bottom: 12px; line-height: 1.6;\" [innerHTML]=\"obj.demo?.notes\"></div>\n                        <div style=\"display: block; max-width: 800px; min-width: 50px;\">\n                            <app-frogger *ngIf=\"obj.link == 'frogger' && !hS.getIsMobile()\" class=\"projects-img\"></app-frogger>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div style=\"text-align: center; margin-bottom: 8px;\">\n                <div *ngIf=\"iframeSrc\" style=\"margin-bottom: 4px\">\n                    <app-iframesrc [iframeSrc]=\"iframeSrc\"></app-iframesrc>\n                </div>\n            </div>\n            <div *ngIf=\"gitSrc\" style=\"text-align: right;\">\n                <button mat-stroked-button style=\"border-radius: 50px; background-color: white; margin-bottom: 8px;\">\n                    <a [href]=\"gitSrc\" target=\"_blank\" style=\"color: #1e88e5; text-decoration: none;\">View Source Code on GitHub</a>\n                </button>\n            </div>\n            <div *ngFor=\"let obj of arrProjects\">\n                <div *ngIf=\"checkCurrentURL(obj)\">\n                    <div *ngIf=\"obj.hardware.length > 0\">\n                        <h2>Hardware</h2>\n                        <div  fxLayout=\"row wrap\" fxLayoutGap=\"4px\" style=\"margin-bottom: 12px\">\n                            <div *ngFor=\"let hw of obj.hardware\">\n                                <button mat-stroked-button class=\"projects-button-no-link\">{{hw}}</button>\n                            </div>\n                        </div>\n                    </div>\n                    <div *ngIf=\"obj.software.length > 0\">\n                        <h2>Software</h2>\n                        <div fxLayout=\"row wrap\" fxLayoutGap=\"4px\" style=\"margin-bottom: 12px\">\n                            <div *ngFor=\"let sw of obj.software\">\n                                <button mat-stroked-button class=\"projects-button-no-link\">{{sw}}</button>\n                            </div>\n                        </div>\n                    </div>\n                    <div *ngIf=\"obj.references.length > 0\">\n                        <h2>References</h2>\n                        <div fxLayout=\"row wrap\" fxLayoutGap=\"4px\" style=\"margin-bottom: 12px\">\n                            <div *ngFor=\"let rf of obj.references\">\n                                <button mat-stroked-button style=\"border-radius: 50px; background-color: white; margin-bottom: 8px;\">\n                                    <a [href]=\"rf.link\" target=\"_blank\" style=\"color: #1e88e5; text-decoration: none;\">{{rf.title}}</a>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n          </div>\n        </div>\n    \n        <div fxShow=\"true\" fxHide.lt-lg fxFlex=\"4\"></div>\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}